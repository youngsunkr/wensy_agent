//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace WSP.Console.WS_AGENTINITIAL {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AgentInitialSoap", Namespace="http://sqlmvp.kr")]
    public partial class AgentInitial : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateHoststatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHoststatus_VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlertRuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PCIDListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PCIDInstanceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDefineListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AgentInitial() {
            this.Url = global::WSP.Console.Properties.Settings.Default.WSP_Console_WS_AGENTINITIAL_AgentInitial;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateHoststatusCompletedEventHandler UpdateHoststatusCompleted;
        
        /// <remarks/>
        public event UpdateHoststatus_VersionCompletedEventHandler UpdateHoststatus_VersionCompleted;
        
        /// <remarks/>
        public event AgentLoginCompletedEventHandler AgentLoginCompleted;
        
        /// <remarks/>
        public event AlertRuleListCompletedEventHandler AlertRuleListCompleted;
        
        /// <remarks/>
        public event PCIDListCompletedEventHandler PCIDListCompleted;
        
        /// <remarks/>
        public event PCIDInstanceListCompletedEventHandler PCIDInstanceListCompleted;
        
        /// <remarks/>
        public event QueryDefineListCompletedEventHandler QueryDefineListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/UpdateHoststatus", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateHoststatus(string CurrentStatus, int iServerNumber, string TimeIn, string TimeIn_UTC) {
            object[] results = this.Invoke("UpdateHoststatus", new object[] {
                        CurrentStatus,
                        iServerNumber,
                        TimeIn,
                        TimeIn_UTC});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHoststatusAsync(string CurrentStatus, int iServerNumber, string TimeIn, string TimeIn_UTC) {
            this.UpdateHoststatusAsync(CurrentStatus, iServerNumber, TimeIn, TimeIn_UTC, null);
        }
        
        /// <remarks/>
        public void UpdateHoststatusAsync(string CurrentStatus, int iServerNumber, string TimeIn, string TimeIn_UTC, object userState) {
            if ((this.UpdateHoststatusOperationCompleted == null)) {
                this.UpdateHoststatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHoststatusOperationCompleted);
            }
            this.InvokeAsync("UpdateHoststatus", new object[] {
                        CurrentStatus,
                        iServerNumber,
                        TimeIn,
                        TimeIn_UTC}, this.UpdateHoststatusOperationCompleted, userState);
        }
        
        private void OnUpdateHoststatusOperationCompleted(object arg) {
            if ((this.UpdateHoststatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHoststatusCompleted(this, new UpdateHoststatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/UpdateHoststatus_Version", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateHoststatus_Version(string HostName, string CurrentStatus, string RAMSize, string WinVer, string Processors, string IPAddress, string AgentVer, int iServerNumber) {
            object[] results = this.Invoke("UpdateHoststatus_Version", new object[] {
                        HostName,
                        CurrentStatus,
                        RAMSize,
                        WinVer,
                        Processors,
                        IPAddress,
                        AgentVer,
                        iServerNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHoststatus_VersionAsync(string HostName, string CurrentStatus, string RAMSize, string WinVer, string Processors, string IPAddress, string AgentVer, int iServerNumber) {
            this.UpdateHoststatus_VersionAsync(HostName, CurrentStatus, RAMSize, WinVer, Processors, IPAddress, AgentVer, iServerNumber, null);
        }
        
        /// <remarks/>
        public void UpdateHoststatus_VersionAsync(string HostName, string CurrentStatus, string RAMSize, string WinVer, string Processors, string IPAddress, string AgentVer, int iServerNumber, object userState) {
            if ((this.UpdateHoststatus_VersionOperationCompleted == null)) {
                this.UpdateHoststatus_VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHoststatus_VersionOperationCompleted);
            }
            this.InvokeAsync("UpdateHoststatus_Version", new object[] {
                        HostName,
                        CurrentStatus,
                        RAMSize,
                        WinVer,
                        Processors,
                        IPAddress,
                        AgentVer,
                        iServerNumber}, this.UpdateHoststatus_VersionOperationCompleted, userState);
        }
        
        private void OnUpdateHoststatus_VersionOperationCompleted(object arg) {
            if ((this.UpdateHoststatus_VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHoststatus_VersionCompleted(this, new UpdateHoststatus_VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/AgentLogin", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AgentLogin(string ProductKey) {
            object[] results = this.Invoke("AgentLogin", new object[] {
                        ProductKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void AgentLoginAsync(string ProductKey) {
            this.AgentLoginAsync(ProductKey, null);
        }
        
        /// <remarks/>
        public void AgentLoginAsync(string ProductKey, object userState) {
            if ((this.AgentLoginOperationCompleted == null)) {
                this.AgentLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentLoginOperationCompleted);
            }
            this.InvokeAsync("AgentLogin", new object[] {
                        ProductKey}, this.AgentLoginOperationCompleted, userState);
        }
        
        private void OnAgentLoginOperationCompleted(object arg) {
            if ((this.AgentLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentLoginCompleted(this, new AgentLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/AlertRuleList", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AlertRuleList(string ServerNum) {
            object[] results = this.Invoke("AlertRuleList", new object[] {
                        ServerNum});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void AlertRuleListAsync(string ServerNum) {
            this.AlertRuleListAsync(ServerNum, null);
        }
        
        /// <remarks/>
        public void AlertRuleListAsync(string ServerNum, object userState) {
            if ((this.AlertRuleListOperationCompleted == null)) {
                this.AlertRuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlertRuleListOperationCompleted);
            }
            this.InvokeAsync("AlertRuleList", new object[] {
                        ServerNum}, this.AlertRuleListOperationCompleted, userState);
        }
        
        private void OnAlertRuleListOperationCompleted(object arg) {
            if ((this.AlertRuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlertRuleListCompleted(this, new AlertRuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/PCIDList", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PCIDList(string ServerNum) {
            object[] results = this.Invoke("PCIDList", new object[] {
                        ServerNum});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void PCIDListAsync(string ServerNum) {
            this.PCIDListAsync(ServerNum, null);
        }
        
        /// <remarks/>
        public void PCIDListAsync(string ServerNum, object userState) {
            if ((this.PCIDListOperationCompleted == null)) {
                this.PCIDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPCIDListOperationCompleted);
            }
            this.InvokeAsync("PCIDList", new object[] {
                        ServerNum}, this.PCIDListOperationCompleted, userState);
        }
        
        private void OnPCIDListOperationCompleted(object arg) {
            if ((this.PCIDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PCIDListCompleted(this, new PCIDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/PCIDInstanceList", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PCIDInstanceList(string ServerNum) {
            object[] results = this.Invoke("PCIDInstanceList", new object[] {
                        ServerNum});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void PCIDInstanceListAsync(string ServerNum) {
            this.PCIDInstanceListAsync(ServerNum, null);
        }
        
        /// <remarks/>
        public void PCIDInstanceListAsync(string ServerNum, object userState) {
            if ((this.PCIDInstanceListOperationCompleted == null)) {
                this.PCIDInstanceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPCIDInstanceListOperationCompleted);
            }
            this.InvokeAsync("PCIDInstanceList", new object[] {
                        ServerNum}, this.PCIDInstanceListOperationCompleted, userState);
        }
        
        private void OnPCIDInstanceListOperationCompleted(object arg) {
            if ((this.PCIDInstanceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PCIDInstanceListCompleted(this, new PCIDInstanceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sqlmvp.kr/QueryDefineList", RequestNamespace="http://sqlmvp.kr", ResponseNamespace="http://sqlmvp.kr", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryDefineList(string ServerNum) {
            object[] results = this.Invoke("QueryDefineList", new object[] {
                        ServerNum});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryDefineListAsync(string ServerNum) {
            this.QueryDefineListAsync(ServerNum, null);
        }
        
        /// <remarks/>
        public void QueryDefineListAsync(string ServerNum, object userState) {
            if ((this.QueryDefineListOperationCompleted == null)) {
                this.QueryDefineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDefineListOperationCompleted);
            }
            this.InvokeAsync("QueryDefineList", new object[] {
                        ServerNum}, this.QueryDefineListOperationCompleted, userState);
        }
        
        private void OnQueryDefineListOperationCompleted(object arg) {
            if ((this.QueryDefineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDefineListCompleted(this, new QueryDefineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateHoststatusCompletedEventHandler(object sender, UpdateHoststatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHoststatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHoststatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateHoststatus_VersionCompletedEventHandler(object sender, UpdateHoststatus_VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHoststatus_VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHoststatus_VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AgentLoginCompletedEventHandler(object sender, AgentLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AlertRuleListCompletedEventHandler(object sender, AlertRuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlertRuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlertRuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PCIDListCompletedEventHandler(object sender, PCIDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PCIDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PCIDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PCIDInstanceListCompletedEventHandler(object sender, PCIDInstanceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PCIDInstanceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PCIDInstanceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryDefineListCompletedEventHandler(object sender, QueryDefineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDefineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDefineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591